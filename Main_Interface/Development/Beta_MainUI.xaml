<Window x:Class="__UI_____Panda_A_.Main_Interface.Development.Beta_MainUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:__UI_____Panda_A_.Main_Interface.Development"
        mc:Ignorable="d"
        Title="Darked"  Height="370" Width="735" WindowStartupLocation="CenterScreen" Topmost="True" AllowsTransparency="true"  Background="Transparent" WindowStyle="None" Icon="{StaticResource pandaofficiallogo}" Foreground="White" BorderBrush="White" MinWidth="735" MinHeight="369" ResizeMode="NoResize">
    <Window.Resources>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border2" Color="#FF343434" />
        <SolidColorBrush x:Key="TextBox.Focus.Border2" Color="#FF343434" />

        <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border2}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border2}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                        <Condition Property="IsSelectionActive" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush
				Color="Transparent"
				x:Key="ScrollBar.Static.Background" />
        <SolidColorBrush
				Color="#ffff"
				x:Key="ScrollBar.Pressed.Glyph" />
        <SolidColorBrush
				Color="#a0a0a0"
				x:Key="ScrollBar.MouseOver.Glyph" />
        <SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Disabled.Glyph" />
        <SolidColorBrush
				Color="#808080"
				x:Key="ScrollBar.Static.Glyph" />
        <SolidColorBrush
				Color="#303030"
				x:Key="ScrollBar.MouseOver.Background" />
        <SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Pressed.Background" />
        <SolidColorBrush
				Color="#181818"
				x:Key="ScrollBar.Disabled.Background" />
        <SolidColorBrush
				Color="#60ffffff"
				x:Key="ScrollBar.Static.Thumb" />
        <SolidColorBrush
				Color="#70ffffff"
				x:Key="ScrollBar.MouseOver.Thumb" />
        <SolidColorBrush
				Color="#80ffffff"
				x:Key="ScrollBar.Pressed.Thumb" />
        <Style
				TargetType="{x:Type RepeatButton}"
				x:Key="ScrollBarButton">
            <Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
            <Setter
					Property="VerticalContentAlignment"
					Value="Center" />
            <Setter
					Property="Padding"
					Value="1" />
            <Setter
					Property="Focusable"
					Value="False" />
            <Setter
					Property="IsTabStop"
					Value="False" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type RepeatButton}">
                        <Border
								Name="border"
								SnapsToDevicePixels="True"
								Background="{StaticResource ScrollBar.Static.Background}">
                            <ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Background}" />
                            </Trigger>
                            <Trigger
									Property="IsPressed"
									Value="True">
                                <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Background}" />
                            </Trigger>
                            <Trigger
									Property="IsEnabled"
									Value="False">
                                <Setter
										TargetName="contentPresenter"
										Property="UIElement.Opacity"
										Value="0.56" />
                                <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource ScrollBar.Disabled.Background}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
				TargetType="{x:Type RepeatButton}"
				x:Key="RepeatButtonTransparent">
            <Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
            <Setter
					Property="Background"
					Value="#00FFFFFF" />
            <Setter
					Property="Focusable"
					Value="False" />
            <Setter
					Property="IsTabStop"
					Value="False" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type RepeatButton}">
                        <Rectangle
								Fill="{TemplateBinding Background}"
								Height="{TemplateBinding Height}"
								Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbVertical">
            <Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
            <Setter
					Property="IsTabStop"
					Value="False" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type Thumb}">
                        <Border
								Name="rectangle"
								CornerRadius="3"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
                        <ControlTemplate.Triggers>
                            <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                <Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger
									Property="Thumb.IsDragging"
									Value="True">
                                <Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
				TargetType="{x:Type Thumb}"
				x:Key="ScrollBarThumbHorizontal">
            <Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
            <Setter
					Property="IsTabStop"
					Value="False" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type Thumb}">
                        <Border
								Name="rectangle"
								CornerRadius="3"
								Height="{TemplateBinding Height}"
								SnapsToDevicePixels="True"
								Width="{TemplateBinding Width}"
								Background="{StaticResource ScrollBar.Static.Thumb}" />
                        <ControlTemplate.Triggers>
                            <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                <Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                            </Trigger>
                            <Trigger
									Property="Thumb.IsDragging"
									Value="True">
                                <Setter
										TargetName="rectangle"
										Property="Background"
										Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
				TargetType="{x:Type ScrollBar}"
				x:Key="{x:Type ScrollBar}">
            <Setter
					Property="Stylus.IsPressAndHoldEnabled"
					Value="False" />
            <Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
            <Setter
					Property="Background"
					Value="{StaticResource ScrollBar.Static.Background}" />
            <Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
            <Setter
					Property="Width"
					Value="8" />
            <Setter
					Property="MinWidth"
					Value="8" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type ScrollBar}">
                        <Grid
								Name="Bg"
								SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition
										Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Border
									Background="{TemplateBinding Background}"
									Grid.Row="0" />
                            <Track
									Name="PART_Track"
									IsDirectionReversed="True"
									IsEnabled="{TemplateBinding IsMouseOver}"
									Grid.Row="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton
											Command="{x:Static ScrollBar.PageUpCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton
											Command="{x:Static ScrollBar.PageDownCommand}"
											Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
											Style="{StaticResource ScrollBarThumbVertical}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition
											Value="true"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" />
                                    <Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition
											Value="true"
											Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" />
                                    <Condition
											Value="false"
											Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" />
                                </MultiDataTrigger.Conditions>
                            </MultiDataTrigger>
                            <Trigger
									Property="IsEnabled"
									Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger
						Property="ScrollBar.Orientation"
						Value="Horizontal">
                    <Setter
							Property="Width"
							Value="Auto" />
                    <Setter
							Property="MinWidth"
							Value="0" />
                    <Setter
							Property="Height"
							Value="8" />
                    <Setter
							Property="MinHeight"
							Value="8" />
                    <Setter
							Property="Template">
                        <Setter.Value>
                            <ControlTemplate
									TargetType="{x:Type ScrollBar}">
                                <Grid
										Name="Bg"
										SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
												Width="0.00001*" />
                                    </Grid.ColumnDefinitions>
                                    <Border
											Background="{TemplateBinding Background}"
											Grid.Column="0" />
                                    <Track
											Name="PART_Track"
											Grid.Column="0"
											IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton
													Command="{x:Static ScrollBar.PageLeftCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton
													Command="{x:Static ScrollBar.PageRightCommand}"
													Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb
													Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition
													Value="true"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" />
                                            <Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition
													Value="true"
													Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" />
                                            <Condition
													Value="false"
													Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" />
                                        </MultiDataTrigger.Conditions>
                                    </MultiDataTrigger>
                                    <Trigger
											Property="IsEnabled"
											Value="False" />
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
				TargetType="{x:Type ScrollViewer}"
				x:Key="{x:Type ScrollViewer}">
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type ScrollViewer}">
                        <Grid
								Name="Grid"
								Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
										Width="*" />
                                <ColumnDefinition
										Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition
										Height="*" />
                                <RowDefinition
										Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle
									Name="Corner"
									Grid.Column="1"
									Grid.Row="1"
                             Fill="{StaticResource ScrollBar.Static.Background}" />
                            <ScrollContentPresenter
									Name="PART_ScrollContentPresenter"
									CanContentScroll="{TemplateBinding CanContentScroll}"
									CanHorizontallyScroll="False"
									CanVerticallyScroll="False"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									Content="{TemplateBinding Content}"
									Grid.Column="0"
									Margin="{TemplateBinding Padding}"
									Grid.Row="0" />
                            <ScrollBar
									Name="PART_VerticalScrollBar"
									AutomationProperties.AutomationId="VerticalScrollBar"
									Cursor="Arrow"
									Grid.Column="1"
									Maximum="{TemplateBinding ScrollableHeight}"
									Minimum="0"
									Grid.Row="0"
									Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportHeight}"
									Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar
									Name="PART_HorizontalScrollBar"
									AutomationProperties.AutomationId="HorizontalScrollBar"
									Cursor="Arrow"
									Grid.Column="0"
									Maximum="{TemplateBinding ScrollableWidth}"
									Minimum="0"
									Orientation="Horizontal"
									Grid.Row="1"
									Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportWidth}"
									Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}" />
            <Setter Property="TextDecorations" Value="Underline" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RichTextBoxStyle1" TargetType="{x:Type RichTextBox}">
            <Style.Resources>
                <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                    <Setter Property="OverridesDefaultStyle" Value="true" />
                </Style>
                <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="Blue" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="MinWidth" Value="10" />
            <Style.BasedOn>
                <StaticResource ResourceKey="{x:Type TextBoxBase}" />
            </Style.BasedOn>
        </Style>
    </Window.Resources>
</Window>
