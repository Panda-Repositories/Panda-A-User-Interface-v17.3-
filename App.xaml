<Application x:Class="__UI_____Panda_A_.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:__UI_____Panda_A_"
             StartupUri="Loader/Loader.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml"/>-->
            </ResourceDictionary.MergedDictionaries>
            <BitmapImage x:Key="pandaofficiallogo" UriSource="Image/PandaBeta1.png"></BitmapImage>
            <BitmapImage x:Key="pandatechnology" UriSource="Image/PandaLogo.png"></BitmapImage>
            <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    <Grid>
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                        <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                            <Condition Property="WindowState" Value="Normal" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible" />
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="SwitchBox" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border
                                Name="Background"
                                Height="25"
                                Width="40"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                CornerRadius="5">
                                    <Grid>
                                        <Border
                                        Name="ToggleButton"
                                        Height="15"
                                        Width="15"
                                        Background="#FF605C"
                                        BorderBrush="Transparent"
                                        BorderThickness="0"
                                        CornerRadius="5"
                                        Margin="0,0,15,0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter 
                                x:Name="contentPresenter" 
                                Grid.Column="1" 
                                Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger 
                                Property="HasContent"
                                Value="True">
                                    <Setter 
                                    Property="Padding"
                                    Value="5,3.5,0,0"/>
                                </Trigger>
                                <Trigger 
                                Property="IsChecked" Value="true">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimationUsingKeyFrames
                                                BeginTime="00:00:00"
                                                Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                    <SplineThicknessKeyFrame KeyTime="0:0:0.25" Value="0,0,15,0"/>
                                                </ThicknessAnimationUsingKeyFrames>
                                                <ColorAnimation
                                                To="#FF605C"
                                                Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                FillBehavior="HoldEnd"
                                                Duration="0:0:0.25"
                                                AutoReverse="False"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimationUsingKeyFrames
                                                BeginTime="00:00:00"
                                                Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                    <SplineThicknessKeyFrame KeyTime="0:0:0.25" Value="15,0,0,0"/>
                                                </ThicknessAnimationUsingKeyFrames>
                                                <ColorAnimation
                                                To="#00CA4E"
                                                Storyboard.TargetName="ToggleButton"
                                                Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                                FillBehavior="HoldEnd"
                                                Duration="0:0:0.25"
                                                AutoReverse="False"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush
				Color="#00ffffff"
				x:Key="Button.Static.Background" />
            <SolidColorBrush
				Color="#FF262626"
				x:Key="Button.MouseOver.Background" />
            <SolidColorBrush
				Color="#FF121212"
				x:Key="Button.Pressed.Background" />
            <SolidColorBrush
				Color="#ff181818"
				x:Key="Button.Disabled.Background" />
            <SolidColorBrush
				Color="Transparent"
				x:Key="ScrollBar.Static.Background" />
            <SolidColorBrush
				Color="#ffffff"
				x:Key="ScrollBar.Pressed.Glyph" />
            <SolidColorBrush
				Color="#a0a0a0"
				x:Key="ScrollBar.MouseOver.Glyph" />
            <SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Disabled.Glyph" />
            <SolidColorBrush
				Color="#808080"
				x:Key="ScrollBar.Static.Glyph" />
            <SolidColorBrush
				Color="#303030"
				x:Key="ScrollBar.MouseOver.Background" />
            <SolidColorBrush
				Color="#404040"
				x:Key="ScrollBar.Pressed.Background" />
            <SolidColorBrush
				Color="#181818"
				x:Key="ScrollBar.Disabled.Background" />
            <SolidColorBrush
				Color="#60ffffff"
				x:Key="ScrollBar.Static.Thumb" />
            <SolidColorBrush
				Color="#70ffffff"
				x:Key="ScrollBar.MouseOver.Thumb" />
            <SolidColorBrush
				Color="#80ffffff"
				x:Key="ScrollBar.Pressed.Thumb" />
            <SolidColorBrush
				Color="#00ffffff"
				x:Key="TabItem.Static.Background" />
            <SolidColorBrush
				Color="#20ffffff"
				x:Key="TabItem.MouseOver.Background" />
            <SolidColorBrush
				Color="#20ffffff"
				x:Key="TabItem.Selected.Background" />
            <SolidColorBrush
				Color="#181818"
				x:Key="ListBox.Static.Background" />
            <Style
				TargetType="{x:Type ScrollViewer}"
				x:Key="{x:Type ScrollViewer}">
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type ScrollViewer}">
                            <Grid
								Name="Grid"
								Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
										Width="*" />
                                    <ColumnDefinition
										Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition
										Height="*" />
                                    <RowDefinition
										Height="Auto" />
                                </Grid.RowDefinitions>
                                <Rectangle
									Name="Corner"
									Grid.Column="1"
									Grid.Row="1"
									Fill="{StaticResource ScrollBar.Static.Background}" />
                                <ScrollContentPresenter
									Name="PART_ScrollContentPresenter"
									CanContentScroll="{TemplateBinding CanContentScroll}"
									CanHorizontallyScroll="False"
									CanVerticallyScroll="False"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									Content="{TemplateBinding Content}"
									Grid.Column="0"
									Margin="{TemplateBinding Padding}"
									Grid.Row="0" />
                                <ScrollBar
									Name="PART_VerticalScrollBar"
									AutomationProperties.AutomationId="VerticalScrollBar"
									Cursor="Arrow"
									Grid.Column="1"
									Maximum="{TemplateBinding ScrollableHeight}"
									Minimum="0"
									Grid.Row="0"
									Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportHeight}"
									Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ScrollBar
									Name="PART_HorizontalScrollBar"
									AutomationProperties.AutomationId="HorizontalScrollBar"
									Cursor="Arrow"
									Grid.Column="0"
									Maximum="{TemplateBinding ScrollableWidth}"
									Minimum="0"
									Orientation="Horizontal"
									Grid.Row="1"
									Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
									ViewportSize="{TemplateBinding ViewportWidth}"
									Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type Button}"
				x:Key="RoundButton">
                <Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
                <Setter
					Property="Background"
					Value="{StaticResource Button.Static.Background}" />
                <Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
                <Setter
					Property="BorderThickness"
					Value="1" />
                <Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
                <Setter
					Property="VerticalContentAlignment"
					Value="Center" />
                <Setter
					Property="Padding"
					Value="6 1" />
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type Button}">
                            <Border
								Name="border"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"
								CornerRadius="2">
                                <ContentPresenter
									Name="contentPresenter"
									Focusable="False"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Margin="{TemplateBinding Padding}"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                    <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource Button.MouseOver.Background}" />
                                </Trigger>
                                <Trigger
									Property="IsPressed"
									Value="True">
                                    <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource Button.Pressed.Background}" />
                                </Trigger>
                                <Trigger
									Property="IsEnabled"
									Value="False">
                                    <Setter
										TargetName="border"
										Property="Background"
										Value="{StaticResource Button.Disabled.Background}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type Button}"
				x:Key="HoverButton">
                <Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
                <Setter
					Property="FrameworkElement.Cursor"
					Value="Arrow" />
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type Button}">
                            <Border
								Name="border"
								BorderThickness="1"

                                CornerRadius="4"
                                BorderBrush="#454545">
                                <ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                    <Setter
										Property="UIElement.Opacity"
										Value="0.8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type Button}"
				x:Key="NoBorder">
                <Setter
					Property="FrameworkElement.OverridesDefaultStyle"
					Value="True" />
                <Setter
					Property="FrameworkElement.Cursor"
					Value="Arrow" />
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type Button}">
                            <Border
								Name="border"
								BorderThickness="1"
                                Background="Transparent"
                                CornerRadius="4">
                                <ContentPresenter
									HorizontalAlignment="Center"
									VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger
									Property="UIElement.IsMouseOver"
									Value="True">
                                    <Setter
										Property="UIElement.Opacity"
										Value="0.8" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type TabControl}"
				x:Key="Tabs">
                <Setter
					Property="Padding"
					Value="2" />
                <Setter
					Property="HorizontalContentAlignment"
					Value="Center" />
                <Setter
					Property="VerticalContentAlignment"
					Value="Center" />
                <Setter
					Property="Background"
					Value="{StaticResource TabItem.Selected.Background}" />
                <Setter
					Property="BorderThickness"
					Value="0" />
                <Setter
					Property="Foreground"
					Value="{DynamicResource SystemColors.ControlTextBrushKey}" />
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type TabControl}">
                            <Grid
								Name="templateRoot"
								ClipToBounds="True"
								SnapsToDevicePixels="True"
								KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
										Name="ColumnDefinition0" />
                                    <ColumnDefinition
										Name="ColumnDefinition1"
										Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition
										Name="RowDefinition0"
										Height="Auto" />
                                    <RowDefinition
										Name="RowDefinition1"
										Height="*" />
                                </Grid.RowDefinitions>
                                <ScrollViewer
									Name="TabScrollViewer"
									VerticalScrollBarVisibility="Disabled"
									Background="#00FFFFFF"
									HorizontalScrollBarVisibility="Hidden"
									ClipToBounds="True">
                                    <StackPanel
										Orientation="Horizontal">
                                        <TabPanel
											Name="headerPanel"
											Background="#00FFFFFF"
											IsItemsHost="True"
											KeyboardNavigation.TabIndex="1"
											ZIndex="1"
											Margin="0 2 0 0" />
                                        <Button
											Name="AddTabButton"
											Width="15"
											Height="15"
											Margin="4"
											Padding="0" Background="#FF505050" BorderBrush="{x:Null}"
                                            Style="{DynamicResource RoundButton}">
                                            <Grid>
                                                <Path
													Stroke="#FFFFFFFF"
													StrokeThickness="1"
													Data="M0,4.5 L9,4.5" />
                                                <Path
													Stroke="#FFFFFFFF"
													StrokeThickness="1"
													Data="M4.5,0 L4.5,9" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </ScrollViewer>
                                <Border
									Name="contentPanel"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Background="{TemplateBinding Background}"
									Grid.Column="0"
									KeyboardNavigation.DirectionalNavigation="Contained"
									Grid.Row="1"
									KeyboardNavigation.TabIndex="2"
									KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter
										Name="PART_SelectedContentHost"
										ContentSource="SelectedContent"
										Margin="{TemplateBinding Padding}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type TabItem}"
				x:Key="Tab">
                <Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
                <Setter
					Property="Foreground"
					Value="#FFFFFFFF" />
                <Setter
					Property="Background"
					Value="{StaticResource TabItem.Static.Background}" />
                <Setter
					Property="Margin"
					Value="0" />
                <Setter
					Property="Padding"
					Value="6,2,6,2" />
                <Setter
					Property="HorizontalContentAlignment"
					Value="Stretch" />
                <Setter
					Property="VerticalContentAlignment"
					Value="Stretch" />
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type TabItem}">
                            <Grid
								Name="templateRoot"
								SnapsToDevicePixels="True"
								Background="#181818">
                                <Border
									Name="mainBorder"
									BorderBrush="{TemplateBinding BorderBrush}"
									CornerRadius="1"
									BorderThickness="0"
									Background="{TemplateBinding Background}"
									Margin="0" />
                                <StackPanel
									Orientation="Horizontal">
                                    <ContentPresenter
										Name="contentPresenter"
										ContentSource="Header"
										Focusable="False"
										Margin="{TemplateBinding Padding}"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Button
										Name="CloseButton"
										Margin="-3 3 3 3"
										Padding="0"
										Height="13"
										Width="13"
										Style="{StaticResource RoundButton}">
                                        <Grid>
                                            <Path
												Stroke="#FFFFFFFF"
												StrokeThickness="1"
												Data="M0,0 L5,5" />
                                            <Path
												Stroke="#FFFFFFFF"
												StrokeThickness="1"
												Data="M0,5 L5,0" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
											Value="true"
											Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" />
                                        <Condition
											Value="false"
											Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                        <Condition
											Value="Top"
											Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter
										TargetName="mainBorder"
										Property="Background"
										Value="{StaticResource TabItem.MouseOver.Background}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition
											Value="true"
											Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" />
                                        <Condition
											Value="Top"
											Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter
										Property="Panel.ZIndex"
										Value="1" />
                                    <Setter
										TargetName="mainBorder"
										Property="Background"
										Value="{StaticResource TabItem.Selected.Background}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ProgressBar" TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground" Value="#1e1e1e"/>
                <Setter Property="Background" Value="#141414"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <Border CornerRadius="2.5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                                <Rectangle x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" Margin="5,5,5,5" ClipToBounds="true" HorizontalAlignment="Left">
                                    <Border x:Name="Indicator" Margin="0,0,10,0" CornerRadius="1" Background="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}" x:Key="HoverTextBox">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border 
                            Name="Border"
                            CornerRadius="2" 
                            Padding="2"
                            Background="#141414"
                            BorderBrush="#191919"
                            BorderThickness="1" >
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE"/>
                                    <Setter Property="Foreground" Value="#888888"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
